#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุณูุฑูุจุช ุฅุฑุณุงู ููุงูุงุช ูุฏููุฉ ุบูุฑ ูุฑุณูุฉ ูุถูุงู ุงุณุชูุฑุงุฑ ูุดุงุท ุงูุจูุช
"""

import asyncio
import datetime
import logging
from database import get_db_session, Article
from bot import send_article_to_telegram, get_channel_id
from telegram import Bot
from config import TELEGRAM_BOT_TOKEN
from sqlalchemy import func

# ุฅุนุฏุงุฏ ุงูุชุณุฌูู
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def send_old_articles():
    """ุฅุฑุณุงู ููุงูุงุช ูุฏููุฉ ุบูุฑ ูุฑุณูุฉ"""
    session = get_db_session()
    bot = Bot(TELEGRAM_BOT_TOKEN)
    
    try:
        # ุงูุจุญุซ ุนู ููุงูุงุช ุบูุฑ ูุฑุณูุฉ ูู ุขุฎุฑ 7 ุฃูุงู
        seven_days_ago = datetime.datetime.utcnow() - datetime.timedelta(days=7)
        
        # ููุงูุงุช ุบูุฑ ูุฑุณูุฉ ูุน ูุดุงุนุฑ ุฅูุฌุงุจูุฉ
        articles = session.query(Article).filter(
            Article.sent_to_telegram == False,
            Article.published_date >= seven_days_ago,
            Article.sentiment_score > 0.2  # ูุดุงุนุฑ ุฅูุฌุงุจูุฉ ุฃู ูุญุงูุฏุฉ
        ).order_by(
            Article.sentiment_score.desc(),  # ุฃููููุฉ ูููุดุงุนุฑ ุงูุฅูุฌุงุจูุฉ
            Article.published_date.desc()    # ุซู ุงูุฃุญุฏุซ
        ).limit(5).all()
        
        if not articles:
            logger.info("โ ูุง ุชูุฌุฏ ููุงูุงุช ุบูุฑ ูุฑุณูุฉ ููุงุณุจุฉ ููุฅุฑุณุงู")
            return
        
        logger.info(f"๐ฐ ูุฌุฏุช {len(articles)} ููุงู ุบูุฑ ูุฑุณู ููุฅุฑุณุงู")
        
        for i, article in enumerate(articles, 1):
            try:
                logger.info(f"๐ค ุฅุฑุณุงู ุงูููุงู {i}/{len(articles)}: {article.title}")
                
                # ุฅุฑุณุงู ุงูููุงู
                await send_article_to_telegram(bot, article)
                
                # ุชุญุฏูุซ ุญุงูุฉ ุงูููุงู
                article.sent_to_telegram = True
                session.commit()
                
                logger.info(f"โ ุชู ุฅุฑุณุงู ุงูููุงู ุจูุฌุงุญ: {article.title}")
                
                # ุงูุชุธุงุฑ 30 ุซุงููุฉ ุจูู ูู ููุงู
                if i < len(articles):
                    logger.info("โณ ุงูุชุธุงุฑ 30 ุซุงููุฉ ูุจู ุฅุฑุณุงู ุงูููุงู ุงูุชุงูู...")
                    await asyncio.sleep(30)
                
            except Exception as e:
                logger.error(f"โ ูุดู ูู ุฅุฑุณุงู ุงูููุงู {article.title}: {e}")
                session.rollback()
        
        logger.info("๐ ุงูุชูุงุก ุฅุฑุณุงู ุงูููุงูุงุช ุงููุฏููุฉ")
        
    except Exception as e:
        logger.error(f"โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูููุงูุงุช ุงููุฏููุฉ: {e}")
    finally:
        session.close()

async def send_test_message():
    """ุฅุฑุณุงู ุฑุณุงูุฉ ุงุฎุชุจุงุฑ"""
    bot = Bot(TELEGRAM_BOT_TOKEN)
    
    try:
        from config import TELEGRAM_CHANNEL_ID
        from telegram.constants import ParseMode
        
        # ุชุญููู ูุนุฑู ุงูููุงุฉ
        channel_id = await get_channel_id(bot, TELEGRAM_CHANNEL_ID)
        
        # ุฑุณุงูุฉ ุงุฎุชุจุงุฑ
        test_message = """๐ค *ุชุญุฏูุซ ุญุงูุฉ ุงูุจูุช*

๐ **ุฅุญุตุงุฆูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช:**
โข ุฅุฌูุงูู ุงูููุงูุงุช: 1568
โข ุงูููุงูุงุช ุงููุฑุณูุฉ: 1128
โข ุงูููุงูุงุช ุบูุฑ ุงููุฑุณูุฉ: 440
โข ุงูููุงูุงุช ูู ุขุฎุฑ 24 ุณุงุนุฉ: 78

โ **ุงูุจูุช ูุนูู ุจุดูู ุทุจูุนู**
๐ฐ **ุณูุชู ุฅุฑุณุงู ููุงูุงุช ูุฏููุฉ ุบูุฑ ูุฑุณูุฉ ูุถูุงู ุงูุงุณุชูุฑุงุฑูุฉ**

๐ ุงููุตุงุฏุฑ ุงููุดุทุฉ: APS, ุงูุดุฑูู, ุงูููุงุฑ, ุงูุฎุจุฑ, TSA Algรฉrie, ูุบูุฑูุง..."""

        await bot.send_message(
            chat_id=channel_id,
            text=test_message,
            parse_mode=ParseMode.MARKDOWN
        )
        
        logger.info("โ ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญุฏูุซ ุงูุญุงูุฉ")
        
    except Exception as e:
        logger.error(f"โ ูุดู ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุญุฏูุซ: {e}")

async def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    logger.info("๐ ุจุฏุก ุฅุฑุณุงู ุงูููุงูุงุช ุงููุฏููุฉ...")
    
    # ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญุฏูุซ ุงูุญุงูุฉ
    await send_test_message()
    
    # ุฅุฑุณุงู ููุงูุงุช ูุฏููุฉ
    await send_old_articles()
    
    logger.info("๐ ุงูุชูุงุก ุงูุนูููุฉ")

if __name__ == "__main__":
    asyncio.run(main()) 